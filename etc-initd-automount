#! /bin/sh
### BEGIN INIT INFO
# Provides:          N/A
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Automounts SAMBA shares
# Description:       Dynamically (un)mounts specific SAMBA shares.
# Put this in /etc/init.d/automount && sudo chmod 755 /etc/init.d/automount && sudo update-rc.d automount defaults 99 01


### END INIT INFO

# Set info for messages
DESC="Automount shares"
NAME=automount
SCRIPTNAME=/etc/init.d/$NAME
DAEMON=/usr/local/bin/$NAME
PIDFILE=/var/run/$NAME.pid

# Exit if the daemon script is not installed
[ -x "$DAEMON" ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

do_start()
{
  echo "Starting automount..."
  start-stop-daemon --start --quiet --background --make-pidfile --pidfile $PIDFILE --exec $DAEMON --test > /dev/null || return 1
  start-stop-daemon --start --quiet --background --make-pidfile --pidfile $PIDFILE --exec $DAEMON -- start $ConfFile || return 2
}

do_stop()
{
  echo "Stopping automount and unmounting..."
  start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
  RETVAL="$?"
  [ "$RETVAL" = 2 ] && return 2
  # Execute again w/ stop to unmount all
  $DAEMON stop $ConfFile
  rm -f $PIDFILE
  return "$RETVAL"
}

do_pause()
{
  echo "Stopping automount..."
  start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
  RETVAL="$?"
  [ "$RETVAL" = 2 ] && return 2
  rm -f $PIDFILE
  return "$RETVAL"
}

if [ "$2" = "" ] # no config file passed
then
  ConfFile=/etc/automount.conf # default configuration file
else
  ConfFile=$2
fi

case "$1" in
  start)
    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
    do_start
    case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    exit "$?"
    ;;
  stop)
    [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    exit "$?"
    ;;
  force-reload|restart)
    [ "$VERBOSE" != no ] && log_daemon_msg "Restarting $DESC" "$NAME"
    do_stop
    case "$?" in
      0|1)
        do_start
        case "$?" in
          0) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
          1) [ "$VERBOSE" != no ] && log_end_msg 1 ;; # Old process is still running
          *) [ "$VERBOSE" != no ] && log_end_msg 1 ;; # Failed to start
        esac
        exit "$?"
        ;;
      *)
        # Failed to stop
        [ "$VERBOSE" != no ] && log_end_msg 1
        exit "$?"
        ;;
    esac
    ;;
  pause)
    [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
    do_pause
    case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    exit "$?"
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload|pause} [FILE]"
    echo "  /etc/automount.conf will be used if FILE is not specified."
    exit 3
    ;;
esac

exit